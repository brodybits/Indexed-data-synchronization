// Generated by CoffeeScript 1.10.0
(function() {
  var bodyParser, express, factory, promisify, start;

  factory = require('../sqlite-data-storage-factory.js');

  express = require('express');

  bodyParser = require('body-parser');

  promisify = require('promisify-node');

  start = function(serverdb) {
    var app, db;
    app = express();
    app.use(bodyParser.json());
    db = promisify(serverdb, void 0, true);
    app.post('/echoBody', function(req, res) {
      return res.send(req.body);
    });
    app.post('/addStoreRecord', function(req, res) {
      var b;
      b = req.body;
      return db.addStoreRecord(b.storeName, b.key, b.value).then(function() {
        res.status(200);
        return res.send();
      }, function(error) {
        res.status(400);
        return res.send();
      });
    });
    app.post('/deleteStoreRecord', function(req, res) {
      var b;
      b = req.body;
      return db.deleteStoreRecord(b.storeName, b.key).then(function() {
        res.status(200);
        return res.send();
      }, function(error) {
        res.status(400);
        return res.send();
      });
    });
    app.post('/getStoreRecordValue', function(req, res) {
      var b;
      b = req.body;
      return db.getStoreRecordValue(b.storeName, b.key).then(function(value) {
        return res.send(value);
      }, function(error) {
        res.status(400);
        return res.send();
      });
    });
    return app.post('/getStoreChanges', function(req, res) {
      var b;
      b = req.body;
      return db.getStoreChanges(b.storeName, b.after).then(function(changes) {
        return res.send(changes);
      }, function(error) {
        res.status(400);
        return res.send();
      });
    });
  };

  module.exports = start;

}).call(this);
